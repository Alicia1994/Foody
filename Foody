REQUETE FOODY

Requêtages simples : 
1- SELECT * FROM Produit ORDER BY PrixUnit LIMIT 10;
2- SELECT * FROM Produit ORDER BY PrixUnit DESC LIMIT 3;

Restrictions 
1- SELECT * FROM Client WHERE Ville = 'Paris' AND Fax IS NULL;
2- SELECT * FROM Client WHERE Pays IN ('Germany', 'France', 'Canada');
3- SELECT * FROM Client WHERE Société LIKE '%restaurant%'

Projection 
1- SELECT DISTINCT Description FROM Categorie;
2- SELECT DISTINCT Pays, Ville FROM Client ORDER BY Pays ASC, Ville DESC;
3- SELECT Société, Contact, Ville FROM Client WHERE Pays IN ('France') ORDER BY Ville;
4- SELECT UPPER(NomProd) AS 'Nom du produit', RefProd AS 'Référence du produit' FROM Produit WHERE NoFour = 8 AND PrixUnit BETWEEN 10 AND 100;

Calculs arithmétiques 
SELECT PrixUnit, Qte, Remise,
(Remise * PrixUnit) AS 'Montant de la remise',
((PrixUnit - (1 - Remise)) * Qte) AS 'Montant à payer'
FROM DetailCommande WHERE NoCom = 10251;

Traitement conditionnel
SELECT NomProd, 
CASE Indisponible 
WHEN 1 THEN 'Produit non disponible'
ELSE 'Produit disponible'
END
FROM Produit;

Fonctions sur les chaînes de caractères 

SELECT 
CONCAT (Adresse, ' ', Ville, ' ', CodePostal, ' ', Pays) AS Adresse_Complète, 
SUBSTR(CodeCli, LENGTH(CodeCli) -1, 2) AS 2_derniers_caractères, 
LOWER(Société) AS Société, 
REPLACE (Fonction, 'Owner', 'Freelance') AS Fonction
FROM Client WHERE Fonction 
LIKE '%manager%'


Fonction sur les dates 

1-
SELECT NoCom, 
DateCom, 
CASE DAYOFWEEK(DateCom) 
WHEN "2" THEN "Lundi"
WHEN "3" THEN "Mardi"
WHEN "4" THEN "Mecredi"
WHEN "5" THEN "Jeudi"
WHEN "6" THEN "Vendredi"
Else "Week-end"
END AS 'Jour_de_la_semaine' 
FROM Commande;

OU CORRECTION

SELECT *,
CASE
WHEN DATE_FORMAT(DateCom, '%W') = 'Sunday' THEN 'week-end'
WHEN DATE_FORMAT(DateCom, '%W') = 'Saturday' THEN 'week-end'
ELSE DATE_FORMAT(DateCom, '%W')
END
FROM commande ;

2-
SELECT 
NoCom, 
DATEDIFF(ALivAvant, DateCom) AS "Delai_livraison",
DATE_ADD(DateCom, INTERVAL 1 MONTH) AS "Contact + 1 mois"
FROM Commande;

Dénombrements
1- SELECT COUNT(*) AS "Nombre de Sales manager" FROM Employe WHERE Fonction = "Sales Manager";
2- SELECT COUNT(*) FROM Produit WHERE CodeCateg = 1 AND NoFour IN (1, 18);
3- SELECT COUNT(DISTINCT PaysLiv) AS "Nbre pays de livraison" FROM Commande;
4- SELECT COUNT(*) FROM Commande WHERE DateCom LIKE '%2006-08%' ;

Calcules statistiques simples
1- SELECT MIN(Port) AS PortMinimum, MAX(Port) AS PortMaximum, FROM Commande;
SELECT AVG(Port) AS 'Cout moyen du port' FROM Commande WHERE CodeCli = "QUICK";
2- 
SELECT SUM(Port)
    FROM Commande
    WHERE NoMess = 1;

SELECT SUM(Port)
    FROM Commande
    WHERE NoMess = 2;

SELECT SUM(Port)
    FROM Commande
    WHERE NoMess = 3;

Agrégats selon attributs 

1- SELECT Fonction, COUNT(*) AS "Nbre d'employés" FROM Employe GROUP BY Fonction;
2- SELECT NoFour, COUNT(DISTINCT CodeCateg) AS "Nbre de catégories" FROM Produit GROUP BY NoFour;
3- SELECT NoFour, CodeCateg, AVG(PrixUnit) As "Prix_moyen" FROM Produit GROUP BY NoFour, CodeCateg;

Restriction sur Agrégats

1- SELECT NoFour FROM Produit GROUP BY NoFour HAVING COUNT(*) = 1;
2- SELECT NoFour FROM Produit GROUP BY NoFour HAVING COUNT(DISTINCT CodeCateg) = 1;
3- SELECT NoFour, Nomprod, MAX(PrixUnit) FROM Produit WHERE PrixUnit > 50 GROUP BY NoFour, Nomprod;

Jointures naturelles

1- SELECT * FROM Produit NATURAL JOIN Fournisseur;
2- SELECT * FROM Client NATURAL JOIN Commande WHERE Société = "Lazy K Kountry Store";
3- SELECT NomMess, COUNT(*) AS "Nbre de commandes" FROM Messager NATURAL JOIN Commande GROUP BY NomMess;

Jointures internes

1- SELECT * FROM Produit INNER JOIN Fournisseur ON Produit.NoFour = Fournisseur.NoFour;
2- SELECT * FROM Client INNER JOIN Commande ON Commande.CodeCli = Client.CodeCli WHERE Société = "Lazy K Kountry Store";
3- SELECT NomMess, COUNT(*) FROM Commande INNER JOIN Messager ON Commande.NoMess = Messager.NoMess GROUP BY NomMess;

Jointures externes

1- SELECT NomProd, COUNT(DISTINCT NoCom) FROM Produit LEFT OUTER JOIN DetailCommande ON Produit.RefProd = DetailCommande.RefProd GROUP BY NomProd;
2- SELECT NomProd FROM Produit LEFT OUTER JOIN DetailCommande ON Produit.RefProd = DetailCommande.RefProd GROUP BY NomProd HAVING COUNT(NoCom) = 0
2- SELECT Nom FROM Employe LEFT OUTER JOIN Commande ON Employe.NoEmp = Commande.NoEmp GROUP BY Nom HAVING COUNT(NoCom) = 0;

Jointures à la main

1- SELECT * FROM Produit, Fournisseur WHERE Produit.NoFour = Fournisseur.NoFour;
2- SELECT * FROM Commande, Client WHERE Commande.CodeCli = Client.CodeCli AND Société = "Lazy K Kountry Store";
3- SELECT NomMess, COUNT(*) FROM Commande, Messager WHERE Commande.NoMess = Messager.NoMess GROUP BY NomMess ;


Sous-requêtes 

1- SELECT Nom FROM Employe WHERE NoEmp NOT IN (SELECT NoEmp FROM Commande);
2- SELECT COUNT(*)
    FROM Produit
    WHERE NoFour = (SELECT NoFour FROM Fournisseur WHERE Societe = "Ma maison")
3-SELECT COUNT(*)
    FROM Commande
    WHERE NoEmp IN (SELECT NoEmp FROM Employe WHERE RendCompteA = 
    (SELECT NoEmp FROM Employe WHERE Nom = "Buchanan" AND Prenom = "Steven"));

Opérateurs EXISTS

1-
2-
3-

1- SELECT NomProd FROM Produit
    WHERE NOT EXISTS (SELECT * FROM DetailCommande WHERE RefProd = Produit.RefProd);

2- SELECT Societe FROM Fournisseur WHERE EXISTS 
    (SELECT * 
        FROM Produit, DetailCommande, Commande
        WHERE Produit.RefProd = DetailCommande.RefProd
        AND DetailCommande.NoCom = Commande.NoCom
        AND PaysLiv = "France"
        AND NoFour = Fournisseur.NoFour);

3- SELECT Fournisseur.Societe
        FROM Fournisseur
        WHERE EXISTS (SELECT * 
                    FROM Produit, Detailcommande, Commande
                    WHERE Produit.RefProd = Detailcommande.RefProd
                    AND Detailcommande.NoCom = Commande.NoCom
                    AND PaysLiv = "France"
                    AND NoFour = Fournisseur.NoFour)


Union
1- SELECT Nom, Prenom
    FROM Employe
    WHERE Fonction = "Representative"
UNION  
SELECT Nom, Prenom
    FROM Employe
    WHERE Pays = "UK";

2- SELECT Société, Cl.Pays
    FROM Client Cl, Commande Co, Employe E
    WHERE Cl.CodeCli = Co.CodeCli
    AND Co.NoEmp = E.NoEmp
    AND E.Ville = "London"
UNION
SELECT Société, Cl.Pays
    FROM Client Cl, Commande Co, Messager M
    WHERE Cl.CodeCli = Co.CodeCli
    AND Co.NoMess = M.NoMess
    AND NomMess = "Speedy Express"

Intersection
1- SELECT Nom, Prenom
    FROM Employe
    WHERE Fonction = "Representative"
INTERSECT 
SELECT Nom, Prenom
    FROM Employe
    WHERE Pays = "UK";

Différence
1- SELECT Nom, Prenom
    FROM Employe
    WHERE Fonction = "Representative"
EXCEPT
SELECT Nom, Prenom
    FROM Employe
    WHERE Pays = "UK";

